<?xml version="1.0" encoding="UTF-8"?>
<!--W3C XML Schema generated by XMLSpy v2012 (x64) (http://www.altova.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<!-- Confidentiality Notice: ACS Confidential and Proprietary - Do not copy or distribute without written permission -->
	<!--Simple Types - listed alphabetically-->
	<xs:simpleType name="collection-id">
		<xs:annotation>
			<xs:documentation>Refer data dictioary: collection ID</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<!--Complex Types - listed alphabetically-->
	<xs:complexType name="assay">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Assay</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ordinal" type="xs:positiveInteger"/>
			<xs:element name="collection-id" type="collection-id" minOccurs="0"/>
			<xs:element name="assay-type" type="xs:string" minOccurs="0"/>
			<xs:element name="assay-name" type="xs:string" minOccurs="0"/>
			<xs:element name="toxicity-type" type="xs:string" minOccurs="0"/>
			<xs:element name="adverse-effect" type="xs:string" minOccurs="0"/>
			<xs:element name="route-of-administration" type="xs:string" minOccurs="0"/>
			<xs:element name="ligand-dose" type="bioactivity-value" minOccurs="0"/>
			<xs:element name="administration-regimen" type="cas-basic-markup" minOccurs="0"/>
			<xs:element name="procedure" type="xs:string" minOccurs="0"/>
			<xs:element name="target-uri" type="bioactivity-target-uri" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="condition" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="type" type="xs:string"/>
						<xs:element name="material" type="xs:string" minOccurs="0"/>
						<xs:element name="material-id" type="xs:string" minOccurs="0"/>
						<xs:element name="prefix" type="xs:string" minOccurs="0"/>
						<xs:element name="value" type="bioactivity-value" minOccurs="0"/>
						<xs:element name="display-condition" type="cas-general-markup" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="measurement" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="data-locator" type="xs:string" minOccurs="0"/>
						<xs:element name="category" type="xs:string" minOccurs="0"/>
						<xs:element name="function" type="xs:string" minOccurs="0"/>
						<xs:element name="display-function" type="cas-general-markup" minOccurs="0"/>
						<xs:element name="parameter" type="xs:string"/>
						<xs:element name="parameter-detail" type="cas-general-markup" minOccurs="0"/>
						<xs:element name="original-prefix" type="xs:string" minOccurs="0"/>
						<xs:element name="original-value" type="bioactivity-value"/>
						<xs:element name="standard-prefix" type="xs:string" minOccurs="0"/>
						<xs:element name="standard-value" type="xs:double" minOccurs="0"/>
						<xs:element name="standard-unit" type="xs:string" minOccurs="0"/>
						<xs:element name="micromolar-value" type="xs:double" minOccurs="0"/>
						<xs:element name="cas-normalized-prefix" type="xs:string" minOccurs="0"/>
						<xs:element name="cas-normalized-value" type="bioactivity-value" minOccurs="0"/>
						<xs:element name="variance" type="xs:string" minOccurs="0"/>
						<xs:element name="display-measurement" type="cas-general-markup" minOccurs="0"/>
						<xs:element name="remarks" type="cas-general-markup" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="disease" type="disease" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="biological-system" type="biological-system" minOccurs="0"/>
			<xs:element name="cited-by" type="reference" minOccurs="0"/>
			<xs:element name="comments" type="cas-general-markup" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="bioactivity-value">
		<xs:annotation>
			<xs:documentation>Reusable comples type containing single value, high-end vale, low-end value, non-numeric value, and unit</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="single-value" type="xs:double"/>
				<xs:sequence>
					<xs:element name="high-end-value" type="xs:double"/>
					<xs:element name="low-end-value" type="xs:double"/>
				</xs:sequence>
				<xs:element name="non-numeric-value" type="xs:string"/>
			</xs:choice>
			<xs:element name="unit" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="biological-system">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Biological System</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" type="xs:string" minOccurs="0"/>
			<xs:element name="cell" type="xs:string" minOccurs="0"/>
			<xs:element name="cell-detail" type="xs:string" minOccurs="0"/>
			<xs:element name="organ" type="xs:string" minOccurs="0"/>
			<xs:element name="organ-detail" type="xs:string" minOccurs="0"/>
			<xs:element name="species" type="xs:string" minOccurs="0"/>
			<xs:element name="species-detail" type="xs:string" minOccurs="0"/>
			<xs:element name="gender" type="xs:string" minOccurs="0"/>
			<xs:element name="age-group" type="xs:string" minOccurs="0"/>
			<xs:element name="vocabulary-entry-uri" type="vocabulary-entry-uri" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="disease">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Disease</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="collection-id" type="collection-id" minOccurs="0"/>
			<xs:element name="original-disease-name" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="physiological-use" type="xs:string" minOccurs="0"/>
			<xs:element name="classification-code" type="xs:string" minOccurs="0"/>
			<xs:element name="icd10-code" type="xs:string" minOccurs="0"/>
			<xs:element name="therapeutic-use" type="therapeutic-use" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="vocabulary-entry-uri" type="vocabulary-entry-uri" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="target-uri" type="bioactivity-target-uri" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="identifier">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Identifier</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="context" type="xs:string"/>
			<xs:element name="id" type="xs:string"/>
			<xs:element name="match-string" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ligand">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Ligand</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ligand-uri" type="ligand-uri"/>
			<xs:element name="ligand-version" type="entity-version"/>
			<xs:element name="ligand-status" type="entity-status"/>
			<xs:element name="collection" type="xs:string"/>
			<xs:element name="ligand-display-name" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="ligand-type" type="xs:string"/>
			<xs:element name="collection-name" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="collection-id" type="collection-id" minOccurs="0"/>
			<xs:element name="identifier" type="identifier" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ligand-detail" type="xs:string" minOccurs="0"/>
			<xs:element name="originator" type="xs:string" minOccurs="0"/>
			<xs:element name="molecular-weight" type="xs:decimal" minOccurs="0"/>
			<xs:element name="molecular-formula" type="molecular-formula" minOccurs="0"/>
			<xs:element name="salt" type="xs:string" minOccurs="0"/>
			<xs:element name="form" type="xs:string" minOccurs="0"/>
			<xs:element name="locator" type="xs:string" minOccurs="0"/>
			<xs:element name="structure-comment" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="structure" type="structure" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="reference" type="reference" maxOccurs="unbounded"/>
			<xs:element name="assay" type="assay" maxOccurs="unbounded"/>
			<xs:element name="disease" type="disease" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="therapeutic-use" type="therapeutic-use" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="target-uri" type="bioactivity-target-uri" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="substance-match" type="matched-substance" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="metabolite" type="metabolite" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="experimental-property-set" type="property-set" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="calculated-property-set" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="property-set">
							<xs:sequence>
								<xs:element name="hydrogen-bond-acceptors" type="xs:integer" minOccurs="0"/>
								<xs:element name="hydrogen-bond-donors" type="xs:integer" minOccurs="0"/>
								<xs:element name="logd" type="xs:double" minOccurs="0"/>
								<xs:element name="polar-surface-area" type="xs:double" minOccurs="0"/>
								<xs:element name="rotatable-bonds" type="xs:integer" minOccurs="0"/>
								<xs:element name="terminal-rotatable-bonds" type="xs:integer" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="matched-substance">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Substance Match</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" type="xs:string"/>
			<xs:element name="ordinal" type="xs:positiveInteger"/>
			<xs:element name="substance-uri" type="substance-uri"/>
			<xs:element name="confidence-level" type="xs:positiveInteger" minOccurs="0"/>
			<xs:element name="note" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="metabolite">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Metabolite</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:string" minOccurs="0"/>
			<xs:element name="cas-metabolite-id" type="xs:string" minOccurs="0"/>
			<xs:element name="metabolite-collection-id" type="xs:string" minOccurs="0"/>
			<xs:element name="metabolizing-enzyme" type="xs:string" minOccurs="0"/>
			<xs:element name="metabolism-scheme" type="xs:string" minOccurs="0"/>
			<xs:element name="molecular-weight" type="xs:decimal" minOccurs="0"/>
			<xs:element name="molecular-formula" type="molecular-formula" minOccurs="0"/>
			<xs:element name="precursor" type="xs:string" minOccurs="0"/>
			<xs:element name="product" type="xs:string" minOccurs="0"/>
			<xs:element name="structure" type="structure" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="molecular-formula" mixed="true">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: molecular formula</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="cas-basic-markup"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="normalized-ligand">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Normalized Ligand</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="normalized-ligand-uri" type="entity-uri"/>
			<xs:element name="normalized-ligand-version" type="entity-version"/>
			<xs:element name="normalized-ligand-status" type="entity-status"/>
			<xs:element name="collection-id" type="xs:string" minOccurs="0"/>
			<xs:element name="ligand-uri" type="ligand-uri" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="molecular-weight" type="xs:decimal"/>
			<xs:element name="molecular-formula" type="molecular-formula"/>
			<xs:element name="substance-match" type="matched-substance" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="structure" type="structure" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="property-set">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Property Set</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="source" type="xs:string"/>
			<xs:element name="logp" type="xs:double" minOccurs="0"/>
			<xs:element name="logp-remarks" type="xs:string" minOccurs="0"/>
			<xs:element name="pka" type="xs:double" minOccurs="0"/>
			<xs:element name="pka-description" type="xs:string" minOccurs="0"/>
			<xs:element name="pka-remarks" type="xs:string" minOccurs="0"/>
			<xs:element name="solubility" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="reference">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Reference</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="collection-id" type="collection-id" minOccurs="0"/>
			<xs:element name="source-type" type="xs:string"/>
			<xs:element name="citation" type="xs:string"/>
			<xs:element name="publication-name" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="volume" type="xs:string" minOccurs="0"/>
			<xs:element name="issue" type="xs:string" minOccurs="0"/>
			<xs:element name="year" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:positiveInteger">
						<xs:maxInclusive value="9999"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="start-page" type="xs:string" minOccurs="0"/>
			<xs:element name="end-page" type="xs:string" minOccurs="0"/>
			<xs:element name="display-pagination" type="xs:string" minOccurs="0"/>
			<xs:element name="original-patent-number" type="xs:string" minOccurs="0"/>
			<xs:element name="patent-number" type="xs:string" minOccurs="0"/>
			<xs:element name="patent-office-code" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:length value="2"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="patent-kind-code" type="xs:string" minOccurs="0"/>
			<xs:element name="display-patent-number" type="xs:string" minOccurs="0"/>
			<xs:element name="title" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="summary" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="abstract" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="issn" type="xs:string" minOccurs="0"/>
			<xs:element name="pubmed-id" type="xs:string" minOccurs="0"/>
			<xs:element name="url" type="xs:string" minOccurs="0"/>
			<xs:element name="related-document" type="document-uri" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="related-reference" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="patent-number" type="xs:string" minOccurs="0"/>
						<xs:element name="document-uri" type="document-uri" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="structure">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Structure</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" type="xs:string"/>
			<xs:element name="version" type="xs:string" minOccurs="0"/>
			<xs:element name="context" type="xs:string"/>
			<xs:element name="structure-representation" type="structure-representation"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="structure-representation" mixed="true">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: structure representation</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="binary-representation" type="xs:base64Binary"/>
			<xs:element name="textual-representation" type="xs:string"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="target">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Target</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="target-uri" type="bioactivity-target-uri"/>
			<xs:element name="target-version" type="entity-version"/>
			<xs:element name="target-status" type="entity-status"/>
			<xs:element name="collection-id" type="collection-id" minOccurs="0"/>
			<xs:element name="identifier" type="identifier" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="original-target-name" type="cas-general-markup"/>
			<xs:element name="standard-name" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="common-name" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="display-name" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="cas-preferred-name" type="cas-general-markup" minOccurs="0"/>
			<xs:element name="acronym" type="xs:string" minOccurs="0"/>
			<xs:element name="match-string" type="xs:string" minOccurs="0"/>
			<xs:element name="organism-source" type="xs:string" minOccurs="0"/>
			<xs:element name="protein-databank-id" type="xs:string" minOccurs="0"/>
			<xs:element name="entrez-locus-id" type="xs:string" minOccurs="0"/>
			<xs:element name="uniprot-id" type="xs:string" minOccurs="0"/>
			<xs:element name="variant" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="xs:string" minOccurs="0"/>
						<xs:element name="operation" type="xs:string" minOccurs="0"/>
						<xs:element name="detail" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="classification" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="type" type="xs:string"/>
						<xs:element name="class" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="substance-uri" type="substance-uri" minOccurs="0"/>
			<xs:element name="vocabulary-entry-uri" type="vocabulary-entry-uri" minOccurs="0"/>
			<xs:element name="biological-system" type="biological-system" minOccurs="0"/>
			<xs:element name="comments" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="therapeutic-use">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Therapeutic Use</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="collection-id" type="collection-id" minOccurs="0"/>
			<xs:element name="term" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="authority-file-key">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="ca-accession-number">
		<xs:annotation>
			<xs:documentation>This is the least common denominator of the various CAN formats: volume:sequence-number, where neither the volume nor the sequence number is padded. Examples: 152:123456 157:2345 85:97 1:347 0:1</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="caplus-accession-number">
		<xs:annotation>
			<xs:documentation>This is the year:sequence-number form, with four-digit year and non-padded sequence number, for
        example: 2009:1581127 2012:805225 1976:400097 1907:347 1906:1
      </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="cdr-uri">
		<xs:annotation>
			<xs:documentation>CDR canonical URI; available for content loaded from CDR</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="entity-status">
		<xs:restriction base="xs:string">
			<xs:annotation>
				<xs:documentation>Possible status values for an entity
         • active – entity is active, may be used by products 
         • deleted – entity was logically deleted 
         • embargoed – other-wise active entity should not be used by products – withholds content because of business rules 
         • hidden – other-wise active entity should not be used by products – withholds content because of an authorized person's decision</xs:documentation>
			</xs:annotation>
			<xs:enumeration value="active"/>
			<xs:enumeration value="deleted"/>
			<xs:enumeration value="embargoed"/>
			<xs:enumeration value="hidden"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="entity-uri">
		<xs:annotation>
			<xs:documentation>Entity URIs are strings that uniquely identify entities in the ODS. They must be portable across environments. Current policy is that entity URI have the form &lt;domain name&gt;/&lt;uuid&gt;</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="entity-version">
		<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	<xs:simpleType name="property-type">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="registry-number">
		<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	<xs:simpleType name="temporary-abstract-number">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<!-- Confidentiality Notice: ACS Confidential and Proprietary - Do not copy or distribute without written permission -->
	<!--Root Elements - listed alphabetically-->
	<xs:element name="ligand" type="ligand">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Ligand</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="normalized-ligand" type="normalized-ligand">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Normalized Ligand</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="target" type="target">
		<xs:annotation>
			<xs:documentation>Refer data dictionary: Target</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- Confidentiality Notice: ACS Confidential and Proprietary - Do not copy or distribute without written permission -->
	<!--URIs - listed alphabetically-->
	<xs:complexType name="bioactivity-target-uri">
		<xs:annotation>
			<xs:documentation>A target URI, with optional "CAS target ID" and "Target Record ID" and can be exposed to external customers</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="cas-target-id" type="xs:string" form="unqualified">
					<xs:annotation>
						<xs:documentation>External consumable unique identifier for the Target and not the Target record. Refer data dictionary for further details</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="target-record-id" type="entity-uri" form="unqualified">
					<xs:annotation>
						<xs:documentation>ID for internal only representation of the Target record</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="book-series-uri">
		<xs:annotation>
			<xs:documentation>A series URI with optional legacy key attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="coden" type="xs:string" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="book-uri">
		<xs:annotation>
			<xs:documentation>A book URI with optional legacy key attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="coden" type="xs:string" form="unqualified"/>
				<xs:attribute name="volume" type="xs:string" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="concept-uri">
		<xs:annotation>
			<xs:documentation>A concept URI with optional afk attribute (DEPRECATED: use vocabulary-entry-uri)</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="afk" type="authority-file-key" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="conference-proceedings-uri">
		<xs:annotation>
			<xs:documentation>A conference proceedings URI with optional legacy key attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="coden" type="xs:string" form="unqualified"/>
				<xs:attribute name="volume" type="xs:string" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="conference-uri">
		<xs:annotation>
			<xs:documentation>A conference URI with optional legacy key attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="coden" type="xs:string" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="document-uri">
		<xs:annotation>
			<xs:documentation>A document URI with optional legacy key attributes - TAN, CAN, CAplus key, or CDR-URI</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="caplus-key" type="caplus-accession-number" form="unqualified"/>
				<xs:attribute name="can" type="ca-accession-number" form="unqualified"/>
				<xs:attribute name="tan" type="temporary-abstract-number" form="unqualified"/>
				<xs:attribute name="cdr-uri" type="cdr-uri" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="journal-uri">
		<xs:annotation>
			<xs:documentation>A journal URI with optional legacy attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="coden" type="xs:string" form="unqualified">
					<xs:annotation>
						<xs:documentation>CAS-assigned CODEN</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="nlm-locator-plus" form="unqualified">
					<xs:annotation>
						<xs:documentation>NLM unique journal ID</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="issn" type="xs:string" form="unqualified"/>
				<xs:attribute name="normalized-title" type="xs:string" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ligand-uri">
		<xs:annotation>
			<xs:documentation>A ligand URI, with optional "CAS ligand ID" and "Ligand Record ID" and can be exposed to external customers</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="cas-ligand-id" type="xs:string" form="unqualified">
					<xs:annotation>
						<xs:documentation>External consumable unique identifier for the Ligand and not the Ligand record. Refer data dictionary for further details</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="ligand-record-id" type="entity-uri" form="unqualified">
					<xs:annotation>
						<xs:documentation>ID for internal only representation of the Ligand record</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="markush-uri">
		<xs:annotation>
			<xs:documentation>A Markush URI with optional legacy key attributes - master diagram number</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="document-id" type="xs:string" form="unqualified"/>
				<xs:attribute name="structure-identifier" type="xs:string" form="unqualified"/>
				<xs:attribute name="diagram-identifier" type="xs:string" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="reaction-rule-uri">
		<xs:annotation>
			<xs:documentation>A reaction rule URI with optional legacy attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="rrd-id" type="xs:integer" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="reaction-uri">
		<xs:annotation>
			<xs:documentation>A reaction URI with optional legacy attributes</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="rxnid" type="cdr-uri" form="unqualified"/>
				<xs:attribute name="tan" type="temporary-abstract-number" form="unqualified"/>
				<xs:attribute name="can" type="ca-accession-number" form="unqualified"/>
				<xs:attribute name="num" type="xs:integer" form="unqualified"/>
				<xs:attribute name="seq" type="xs:integer" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="specialty-chemical-uri">
		<xs:annotation>
			<xs:documentation>A URI for specialty chemical with mandatory public identifier attribute</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="public-identifier" type="xs:string" use="required" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="substance-uri">
		<xs:annotation>
			<xs:documentation>A substance URI with optional registry number attribute</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="registry-number" type="registry-number" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="thesaurus-member-uri">
		<xs:annotation>
			<xs:documentation>Identifies a member of a thesaurus</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri"/>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="thesaurus-uri">
		<xs:annotation>
			<xs:documentation>Identifies a thesaurus</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri"/>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="vocabulary-entry-uri">
		<xs:annotation>
			<xs:documentation>A vocabulary entry URI with optional afk attribute (replaces concept-uri)</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="entity-uri">
				<xs:attribute name="afk" type="authority-file-key" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!--Simple Types - listed alphabetically-->
	<xs:simpleType name="display-year">
		<xs:annotation>
			<xs:documentation>A 4-digit year in text format</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="collapse"/>
			<xs:pattern value="[0-9][0-9][0-9][0-9]"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="flag-boolean">
		<xs:annotation>
			<xs:documentation>This type is used for boolean flags: follows industry standard of a boolean flag and is meant to be used to externally facing data, like to and from curators, vendors, etc.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	<xs:simpleType name="reference-code">
		<xs:annotation>
			<xs:documentation>Type of the code of a reference item; can be used in other schemas that refer to reference data</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="reference-name">
		<xs:annotation>
			<xs:documentation>Type of the name of a reference item; can be used in other schemas that refer to reference data</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="reference-primary-id">
		<xs:annotation>
			<xs:documentation>Type of the primary identifier of a reference item; can be used in other schemas that refer to reference data</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<!--Complex Types - closely related to BMV data dictionary types, listed alphabetically-->
	<xs:complexType name="content-date">
		<xs:annotation>
			<xs:documentation>An entity that represents whole or partial dates. See Document data dictionary for details</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="date-context" type="xs:string"/>
			<xs:element name="string-date" type="xs:string"/>
			<xs:element name="date" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If day, month and year are all available, a date is preferred</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="display-year">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="4"/>
						<xs:maxLength value="4"/>
						<xs:pattern value="[0-9]*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="context-value-pair">
		<xs:annotation>
			<xs:documentation>An entity that contains Context-Value pairs (both optional)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="context" type="xs:string" minOccurs="0"/>
			<xs:element name="value" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="context-value-pair-mandatory">
		<xs:annotation>
			<xs:documentation>An entity that contains Context-Value pairs (both mandatory)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="context" type="reference-name"/>
			<xs:element name="value" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="context-value-pair-optional">
		<xs:annotation>
			<xs:documentation>An entity that contains Context-Value pairs (optional element: value)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="context" type="reference-name"/>
			<xs:element name="value" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="flag">
		<xs:annotation>
			<xs:documentation>This type is used for boolean flags: requires an empty element</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="industry-classification-code">
		<xs:annotation>
			<xs:documentation>Industry codes curated by external organizations for the purpose of market segmentation</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code-type" type="reference-primary-id"/>
			<xs:element name="code" type="xs:string"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="code-relevance" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="language">
		<xs:annotation>
			<xs:documentation>Represents a language, including an ISO code and language name</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="language-code" type="xs:string">
				<xs:annotation>
					<xs:documentation>ISO language code - usually 2 characters, but may be 3 characters for some languages that do not have 2-character codes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="language-name" type="xs:string">
				<xs:annotation>
					<xs:documentation>ISO language name</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="marked-up-string">
		<xs:annotation>
			<xs:documentation>A string that may contain escaped XML markup, for example, H&amp;lt;sub&amp;gt;2&amp;lt;/sub&amp;gt;O</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="markup-style" type="xs:string" form="unqualified"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="source-of-content">
		<xs:annotation>
			<xs:documentation>Information about the origin of a piece of content; initially, the possibilities are documents and attributions</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="document-uri" type="document-uri" minOccurs="0"/>
			<xs:element name="attribution" type="cas-basic-markup" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!--Markup types - listed alphabetically-->
	<xs:complexType name="cas-basic-markup" mixed="true">
		<xs:annotation>
			<xs:documentation>string with sub, sup, ital, smallcap, bold tags, nestable</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="cas-basic-markup"/>
			<xs:element name="sup" type="cas-basic-markup"/>
			<xs:element name="ital" type="cas-basic-markup"/>
			<xs:element name="bold" type="cas-basic-markup"/>
			<xs:element name="smallcap" type="cas-basic-markup"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-document-markup" mixed="true">
		<xs:annotation>
			<xs:documentation>string with sub, sup, ital, bold, scriptfont, smallcap, underline, overline, and line-through tags</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="xs:string"/>
			<xs:element name="sup" type="xs:string"/>
			<xs:element name="ital" type="xs:string"/>
			<xs:element name="bold" type="xs:string"/>
			<xs:element name="scriptfont" type="xs:string"/>
			<xs:element name="smallcap" type="xs:string"/>
			<xs:element name="underline" type="xs:string"/>
			<xs:element name="overline" type="xs:string"/>
			<xs:element name="line-through" type="xs:string"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-document-markup-nest-1" mixed="true">
		<xs:annotation>
			<xs:documentation>string with sub, sup, ital, bold, scriptfont, smallcap, underline, overline, and line-through tags, nestable one level</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="cas-document-markup"/>
			<xs:element name="sup" type="cas-document-markup"/>
			<xs:element name="ital" type="cas-document-markup"/>
			<xs:element name="bold" type="cas-document-markup"/>
			<xs:element name="smallcap" type="cas-document-markup"/>
			<xs:element name="scriptfont" type="cas-document-markup"/>
			<xs:element name="underline" type="cas-document-markup"/>
			<xs:element name="overline" type="cas-document-markup"/>
			<xs:element name="line-through" type="cas-document-markup"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-document-markup-nest-2" mixed="true">
		<xs:annotation>
			<xs:documentation>string with sub, sup, ital, bold, scriptfont, smallcap, underline, overline, and line-through tags, nestable two levels</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="cas-document-markup-nest-1"/>
			<xs:element name="sup" type="cas-document-markup-nest-1"/>
			<xs:element name="ital" type="cas-document-markup-nest-1"/>
			<xs:element name="bold" type="cas-document-markup-nest-1"/>
			<xs:element name="smallcap" type="cas-document-markup-nest-1"/>
			<xs:element name="scriptfont" type="cas-document-markup-nest-1"/>
			<xs:element name="underline" type="cas-document-markup-nest-1"/>
			<xs:element name="overline" type="cas-document-markup-nest-1"/>
			<xs:element name="line-through" type="cas-document-markup-nest-1"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-document-markup-nest-3" mixed="true">
		<xs:annotation>
			<xs:documentation>string with sub, sup, ital, bold, scriptfont, smallcap, underline, overline, and line-through tags, nestable three levels</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="cas-document-markup-nest-2"/>
			<xs:element name="sup" type="cas-document-markup-nest-2"/>
			<xs:element name="ital" type="cas-document-markup-nest-2"/>
			<xs:element name="bold" type="cas-document-markup-nest-2"/>
			<xs:element name="smallcap" type="cas-document-markup-nest-2"/>
			<xs:element name="scriptfont" type="cas-document-markup-nest-2"/>
			<xs:element name="underline" type="cas-document-markup-nest-2"/>
			<xs:element name="overline" type="cas-document-markup-nest-2"/>
			<xs:element name="line-through" type="cas-document-markup-nest-2"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-general-markup" mixed="true">
		<xs:annotation>
			<xs:documentation>string with document tags and svg-based line-related tags, nestable</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="cas-general-markup"/>
			<xs:element name="sup" type="cas-general-markup"/>
			<xs:element name="ital" type="cas-general-markup"/>
			<xs:element name="bold" type="cas-general-markup"/>
			<xs:element name="scriptfont" type="cas-general-markup"/>
			<xs:element name="smallcap" type="cas-general-markup"/>
			<xs:element name="underline" type="cas-general-markup"/>
			<xs:element name="overline" type="cas-general-markup"/>
			<xs:element name="line-through" type="cas-general-markup"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-general-markup-with-image" mixed="true">
		<xs:annotation>
			<xs:documentation>cas-general-markup type augmented with the capability to include binary encoded images</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="cas-general-markup"/>
			<xs:element name="sup" type="cas-general-markup"/>
			<xs:element name="ital" type="cas-general-markup"/>
			<xs:element name="bold" type="cas-general-markup"/>
			<xs:element name="scriptfont" type="cas-general-markup"/>
			<xs:element name="smallcap" type="cas-general-markup"/>
			<xs:element name="underline" type="cas-general-markup"/>
			<xs:element name="overline" type="cas-general-markup"/>
			<xs:element name="line-through" type="cas-general-markup"/>
			<xs:element name="image">
				<xs:complexType mixed="true">
					<xs:simpleContent>
						<xs:extension base="xs:base64Binary">
							<xs:attribute name="image-format" use="required"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-molform-markup" mixed="true">
		<xs:annotation>
			<xs:documentation>string with at most sub and sup tags, not nesting</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="xs:string"/>
			<xs:element name="sup" type="xs:string"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-molform-markup-nest-1" mixed="true">
		<xs:annotation>
			<xs:documentation>string with at most sub and sup tags, nestable one level</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="cas-molform-markup"/>
			<xs:element name="sup" type="cas-molform-markup"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-simple-markup" mixed="true">
		<xs:annotation>
			<xs:documentation>string with at most sub, sup, ital and smallcap tags, not nesting</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="xs:string"/>
			<xs:element name="sup" type="xs:string"/>
			<xs:element name="ital" type="xs:string"/>
			<xs:element name="smallcap" type="xs:string"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="cas-simple-markup-nest-1" mixed="true">
		<xs:annotation>
			<xs:documentation>string with at most sub, sup, ital and smallcap tags, nestable one level</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="sub" type="cas-simple-markup"/>
			<xs:element name="sup" type="cas-simple-markup"/>
			<xs:element name="ital" type="cas-simple-markup"/>
			<xs:element name="smallcap" type="cas-simple-markup"/>
		</xs:choice>
	</xs:complexType>
</xs:schema>
